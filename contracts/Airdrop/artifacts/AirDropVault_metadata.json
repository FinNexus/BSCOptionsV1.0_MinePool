{
	"compiler": {
		"version": "0.5.16+commit.9c3226ce"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "claimer",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "AddSushiList",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "claimer",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "AddWhiteList",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "claimer",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "SushiMineClaim",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "claimer",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "ftpbnum",
						"type": "uint256"
					}
				],
				"name": "UserFreeClaim",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "claimer",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "ftpbnum",
						"type": "uint256"
					}
				],
				"name": "WhiteListClaim",
				"type": "event"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "_account",
						"type": "address"
					}
				],
				"name": "balanceOfAirDrop",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "_targetToken",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_account",
						"type": "address"
					}
				],
				"name": "balanceOfFreeClaimAirDrop",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "cfnxToken",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "claimAirdrop",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "claimBeginTime",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "claimEndTime",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "fnxPerFreeClaimUser",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "fnxToken",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "_targetToken",
						"type": "address"
					}
				],
				"name": "freeClaim",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "freeClaimedUserList",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "ftpbToken",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					}
				],
				"name": "getOperator",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "_reciever",
						"type": "address"
					}
				],
				"name": "getbackLeftFnx",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "_optionColPool",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_minePool",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_fnxToken",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_ftpbToken",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_claimBeginTime",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_claimEndTime",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_fnxPerFreeClaimUser",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_maxFreeFnxAirDrop",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_maxWhiteListFnxAirDrop",
						"type": "uint256"
					}
				],
				"name": "initAirdrop",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "_cfnxToken",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_sushiMineStartTime",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_sushimineInterval",
						"type": "uint256"
					}
				],
				"name": "initSushiMine",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "initialize",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "isOwner",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "maxFreeFnxAirDrop",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "maxWhiteListFnxAirDrop",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "minePool",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "optionColPool",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "resetTokenList",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "bool",
						"name": "halt",
						"type": "bool"
					}
				],
				"name": "setHalt",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "addAddress",
						"type": "address"
					}
				],
				"name": "setOperator",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address[]",
						"name": "_accounts",
						"type": "address[]"
					},
					{
						"internalType": "uint256[]",
						"name": "_fnxnumbers",
						"type": "uint256[]"
					}
				],
				"name": "setSushiMineList",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address[]",
						"name": "_tokens",
						"type": "address[]"
					},
					{
						"internalType": "uint256[]",
						"name": "_minBalForFreeClaim",
						"type": "uint256[]"
					}
				],
				"name": "setTokenList",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address[]",
						"name": "_accounts",
						"type": "address[]"
					},
					{
						"internalType": "uint256[]",
						"name": "_fnxnumbers",
						"type": "uint256[]"
					}
				],
				"name": "setWhiteList",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "suhiUserMineBalance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "sushiMineClaim",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "sushiMineStartTime",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "sushiTotalMine",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "sushimineInterval",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "tkBalanceRequire",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "tokenWhiteList",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "totalFreeClaimed",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "totalWhiteListAirdrop",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "totalWhiteListClaimed",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "update",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "userWhiteList",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "whitelistClaim",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"methods": {
				"balanceOfAirDrop(address)": {
					"details": "getting function.retrieve all of the balance for airdrop include whitelist and free claimer",
					"params": {
						"_account": "the user "
					}
				},
				"balanceOfFreeClaimAirDrop(address,address)": {
					"details": "getting function.get user claimable airdrop balance for curve.hegic user",
					"params": {
						"_account": "user address",
						"_targetToken": "the token address for getting balance from it for user "
					}
				},
				"claimAirdrop()": {
					"details": "claim all of the airdrop include whitelist and free claimer"
				},
				"freeClaim(address)": {
					"details": "user claim airdrop for curve.hegic user",
					"params": {
						"_targetToken": "the token address for getting balance from it for user "
					}
				},
				"getbackLeftFnx(address)": {
					"details": "getting back the left mine token",
					"params": {
						"_reciever": "the reciever for getting back mine token"
					}
				},
				"initAirdrop(address,address,address,address,uint256,uint256,uint256,uint256,uint256)": {
					"details": "init function,init air drop",
					"params": {
						"_claimBeginTime": "the start time for airdrop",
						"_claimEndTime": "the end time for airdrop",
						"_fnxPerFreeClaimUser": "the fnx amo for each person in airdrop",
						"_fnxToken": "the fnx token address",
						"_ftpbToken": "the ftpb token address",
						"_maxFreeFnxAirDrop": "the max fnx amount for free claimer from hegic,curve",
						"_maxWhiteListFnxAirDrop": "the mx fnx number in whitelist ways",
						"_optionColPool": "the option collateral contract address"
					}
				},
				"initSushiMine(address,uint256,uint256)": {
					"details": "init function,init sushi mine",
					"params": {
						"_cfnxToken": "the mined reward token",
						"_sushiMineStartTime": "mine start time",
						"_sushimineInterval": "the sushi mine time interval"
					}
				},
				"isOwner()": {
					"details": "Returns true if the caller is the current owner."
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.      * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"setOperator(uint256,address)": {
					"details": "modify indexed operator by owner.       "
				},
				"setSushiMineList(address[],uint256[])": {
					"details": "setting function.set user the subcidy balance for sushi fnx-eth miners",
					"params": {
						"_accounts": "the user address.tested support 200 address in one tx",
						"_fnxnumbers": "the user's mined fnx number"
					}
				},
				"setTokenList(address[],uint256[])": {
					"details": "setting function.set target token and required balance for airdrop token",
					"params": {
						"_minBalForFreeClaim": "the required minimal balance for the claimer",
						"_tokens": "the tokens address.tested support 200 address in one tx"
					}
				},
				"setWhiteList(address[],uint256[])": {
					"details": "setting function.set airdrop users address and balance in whitelist ways",
					"params": {
						"_accounts": "the user address.tested support 200 address in one tx",
						"_fnxnumbers": "the user's airdrop fnx number"
					}
				},
				"sushiMineClaim()": {
					"details": "user get fnx subsidy for sushi fnx-eth mine pool"
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				},
				"whitelistClaim()": {
					"details": "claim the airdrop for user in whitelist ways"
				}
			}
		},
		"userdoc": {
			"methods": {
				"resetTokenList()": {
					"notice": "reset token setting in case of setting is wrong"
				},
				"setHalt(bool)": {
					"notice": "function Emergency situation that requires contribution period to stop or not."
				}
			}
		}
	},
	"settings": {
		"compilationTarget": {
			"localhost/Airdrop/AirdropVault.sol": "AirDropVault"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"localhost/Airdrop/AirdropVault.sol": {
			"keccak256": "0x5a91f0e04c75e5be6f2242a691eafdf8ce212d70c71c372f547f474a21d216cc",
			"urls": [
				"bzz-raw://085da44d5879cb610ead80f2ce7ad0b392523116eee0927d9e4d5cea29cdeaec",
				"dweb:/ipfs/QmVZsU6enxRwSoMZA1b5mY8iUPU4CRn16Kckj4DCDtuzyC"
			]
		},
		"localhost/Airdrop/AirdropVaultData.sol": {
			"keccak256": "0x21ebbadfafdb6036aa6fec7fea86c7a3ad8020a4935786b832a14d149812fa5b",
			"urls": [
				"bzz-raw://338bc846f00c74508e0744352474bbf9087b254e9614dc785ccae93c5e9c048c",
				"dweb:/ipfs/QmcbMovgBB3krCpNsfXExoqqsfDq1ckCKLeZBjWATmKhom"
			]
		},
		"localhost/ERC20/IERC20.sol": {
			"keccak256": "0x3f11e352b753d34c5b12012a5101fad6d2a35f539f31aa7d88aed2001c02f6fc",
			"urls": [
				"bzz-raw://9b2f9b94bc971554502db91b2224b9620fd724a4b374a05373cefcf737cade6a",
				"dweb:/ipfs/QmeuCBAi6GFzLbh3z8qby6acgjFJxKbywCP71oS9G3Hsna"
			]
		},
		"localhost/modules/Halt.sol": {
			"keccak256": "0x4decad501065bc7cac2133a68b8c1103ee4888b90318bed58706c47afe9c0c05",
			"urls": [
				"bzz-raw://bdb78b06241ec0d18a75acbd7c90ecb0bc3f1f21ddf4467e563b8ed1ba672271",
				"dweb:/ipfs/Qmc4hqMpXR32k5K1ygra9NDNgG3kFRexQ67DrDpsiMcuMF"
			]
		},
		"localhost/modules/Managerable.sol": {
			"keccak256": "0xd8820b7a31edb67707507056fe78b0d9549e4590b07d7b6579cf741e8035b985",
			"urls": [
				"bzz-raw://9f32c923cb961fdc12f7e01dda7ccbc2b9039fbd1af1488a34b7b6c3722f9ea8",
				"dweb:/ipfs/QmPYMKviy8kPpQMvJNM7eFefLhEGCZYtbGbFZabe1w5te1"
			]
		},
		"localhost/modules/Operator.sol": {
			"keccak256": "0x3183606f93d8566bee757f5a164a19f6c5b6d58f763bbb05054a19f6de21294b",
			"urls": [
				"bzz-raw://e23ea02455f2fb28859327ada6c61760e97a710035747db659f773f558a873ee",
				"dweb:/ipfs/QmNSSStPCNqZYbZWSv6cMLXLHZmNF9CLD7RsfJhBzN5idN"
			]
		},
		"localhost/modules/Ownable.sol": {
			"keccak256": "0xbee80fd7a5d8bfc985dfb69ab47d582835fbf1e3352598e9c75ee931d8201b5d",
			"urls": [
				"bzz-raw://e388e11e0172712bf10327ddee6df03aeebeda1218734aadb40b1d2a46567d8d",
				"dweb:/ipfs/QmXn5T5gAAZmNKWvXNV9YkuDv7h5ppvdYwACUT5yD7ycxD"
			]
		},
		"localhost/modules/SafeMath.sol": {
			"keccak256": "0xeb295b448107f6adee6c0861eba7cd58983eeb1a2bf9cd24b3df9c75fe17db75",
			"urls": [
				"bzz-raw://781a662595af8ecda052135a27529293189c1cdf40bc5e2934a62b3bc2b327ea",
				"dweb:/ipfs/QmNaGn5PyRCu3tfBu6mMwx3j2BHJiXWKiYGHSAu3au6P7S"
			]
		},
		"localhost/modules/whiteList.sol": {
			"keccak256": "0xf77774a06a719d17391c46d647545a6de8828169476930cda266c82ae4ec3476",
			"urls": [
				"bzz-raw://599893aa12ecbf104b0c59d9a0d07d6cf5547798c0be3f9b4d081711d5be98a8",
				"dweb:/ipfs/Qmcs5UZ1BVTwMbW7TCVErKzhKDgduSu7sXu453T4fND7UG"
			]
		}
	},
	"version": 1
}